version: "3.7"

services:
  rails:
    build:
      context: .
      dockerfile: _Dockerfile
    stdin_open: true
    tty: true
    working_dir: /usr/src/app
    networks:
      courses-network:
        aliases:
          - rails
    ports:
      - 127.0.1.1:3000:3000
    volumes:
      - .:/usr/src/app
      - rubies:/opt/rubies
    depends_on:
      - db
      - cache
      - arc
    environment:
      RAILS_ENV: "local_production"
      RACK_ENV: "local_production"
      DATABASE_URL: "postgres://postgres:password@db/"
      MEMCACHIER_SERVERS: "cache"
      # ENABLE_HTTPS: "true"
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      YARN_INTEGRITY_ENABLED: "false"
    entrypoint: /_docker-entrypoint.sh
    command: "bin/startup"

  app:
    image: nginx:1.15.12-alpine
    depends_on:
      - rails
    networks:
      courses-network:
        aliases:
          - app
    volumes:
      - ./_docker-storage/certs:/etc/nginx/certs
      - ./_docker-storage/ssl.conf:/etc/nginx/conf.d/ssl.conf
    ports:
      - 127.0.1.1:3443:443

  db:
    image: postgres:10-alpine
    networks:
      courses-network:
        aliases:
          - db

  cache:
    image: memcached:1.5.12-alpine
    networks:
      courses-network:
        aliases:
          - cache

  arc:
    image: alpine:latest
    volumes:
      - rubies:/cont/rubies
      - ./_docker-storage:/host/docker
    networks:
      - courses-network
    working_dir: /cont
    entrypoint: tar -czf /host/docker/current.tgz rubies/

  pghero:
    image: ankane/pghero
    depends_on:
      - db
    ports:
      - 127.0.1.1:8080:8080
    environment:
      DATABASE_URL: "postgres://postgres:password@db/PracticalDeveloper_development"
    networks:
      - courses-network

  sitespeed.io:
    image: sitespeedio/sitespeed.io
    networks:
      - courses-network
    command: -V
    shm_size: 1g
    volumes:
      - ./sitespeed-result/:/sitespeed.io/sitespeed-result

  grafana:
    image: grafana/grafana:6.1.6
    depends_on:
      - graphite
    networks:
      - courses-network
    ports:
      - "127.0.1.1:3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=hdeAga76VG6ga7plZ1
      - GF_SECURITY_ADMIN_USER=sitespeedio
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
    volumes:
      - grafana:/var/lib/grafana

  graphite:
    image: sitespeedio/graphite:1.1.5-3
    networks:
      - courses-network
    ports:
      - "127.0.1.1:2003:2003"
      - "127.0.1.1:8080:80"
    volumes:
      # In production you should configure/map these to your container
      # Make sure whisper and graphite.db/grafana.db lives outside your containerr
      # https://www.sitespeed.io/documentation/sitespeed.io/graphite/#graphite-for-production-important
      - whisper:/opt/graphite/storage/whisper
      # Download an empty graphite.db from https://github.com/sitespeedio/sitespeed.io/tree/master/docker/graphite
      #- ./graphite/graphite.db:/opt/graphite/storage/graphite.db
      #- ./graphite/conf/storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
      #- ./graphite/conf/storage-aggregation.conf:/opt/graphite/conf/storage-aggregation.conf
      #- ./graphite/conf/carbon.conf:/opt/graphite/conf/carbon.conf
  grafana-setup:
    image: sitespeedio/grafana-bootstrap:8.14.0
    networks:
      - courses-network
    depends_on:
      - grafana
    environment:
      - GF_PASSWORD=hdeAga76VG6ga7plZ1
      - GF_USER=sitespeedio

networks:
  courses-network:
    name: courses-network

volumes:
  rubies:
  grafana:
  whisper:
